@using Ecommerce.Web.Commons;
@using Ecommerce.Web.Extenions.Class
@using Ecommerce.Web.Models.Product;
@using Ecommerce.Web.Services.Interfaces
@using Microsoft.Extensions.Options
@inject ICommonService common;
@inject IOptions<AppSetting> options
@model Product;
<script>
    let baseApiUrl = '@options.Value.BaseApiUrl';

    $(function () {
        getList();
        setSelect2();
        $(document).on('click', '[data-toggle="lightbox"]', function (event) {
            event.preventDefault();
            $(this).ekkoLightbox({
                alwaysShowClose: true
            });
        });

        $('.btn[data-filter]').on('click', function () {
            $('.btn[data-filter]').removeClass('active');
            $(this).addClass('active');
        });
    });

    function getList() {
        var _obj = new Object();
        _obj.ProductId = $('#txtProduct').val();
        _obj.CategoryId = $('#txtCategory').val();
        _obj.Status = $('#txtStatus').val();
        $.ajax({
            type: "POST",
            url: baseApiUrl + 'Product/GetList',
            headers: {
                'Authorization': 'bearer ' + _token
            },
            data: JSON.stringify(_obj),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            async: false,
            success: function (response) {
                if (response.isSuccess) onSuccess(response);
                else $("#dtResult").dataTable().fnClearTable();
            },
            error: function (jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
                window.location.href = '/ErrorPages/' + jqXHR.status;
            }
        })
    }

    function onSuccess(response) {
        $('#dtResult').DataTable({
            bDestroy: true,
            bProcessing: true,
            bLenghtChange: true,
            lengthMenu: [[5, 10, 25, -1], [5, 10, 25, "All"]],
            searching: false, //ช่อง search
            responsive: true,
            autoWidth: false,
            bfilter: true,
            bSort: true,
            bPaginate: true,
            lengthChange: true, //ปุ่มจำนวนแสดงข้อมูล
            data: response.value,
            columns: [
                {
                    data: 'productName',
                    render: function (data, type, row, meta) {
                        return row.productName
                    }
                },
                {
                    data: 'categoryName',
                    render: function (data, type, row, meta) {
                        return row.categoryName
                    }
                },
                {
                    data: 'image',
                    render: function (data, type, row, meta) {
                        return htmlImage(row);
                    }
                },
                {
                    data: 'stock',
                    render: function (data, type, row, meta) {
                        return row.stock
                    }
                },
                {
                    data: 'price',
                    render: function (data, type, row, meta) {
                        return row.price
                    }
                },
                {
                    data: 'description',
                    render: function (data, type, row, meta) {
                        return row.description
                    }
                },
                {
                    data: 'status',
                    render: function (data, type, row, meta) {
                        return htmlStatusBadge(row);
                    }
                },
                {
                    data: 'createDate',
                    render: function (data, type, row, meta) {
                        return row.createDate
                    }
                },
                {
                    data: 'productId',
                    render: function (data, type, row, meta) {
                        return htmlActionButtonWithImage(row);
                    }
                }
            ]
        })
    }

    function htmlImage(row) {
        var html;
        if (row.image != null && row.image != '') {
            let imageUrl = '@Url.Content("~/images/product/")' + row.productId + "/" + row.image;
            html = '<div class="filtr-item col-sm-2">'
                + '<a href="' + imageUrl + '" data-toggle="lightbox" data-title="' + row.productName + '">'
                + '<img src="' + imageUrl + '" alt="' + row.productName + '" width="50" height="50" />'
                + '</a>'
                + '</div>'
        }
        else {
            let imageUrl = '@Url.Content("~/images/no_photo.jpg")';
            html = '<img src="' + imageUrl + '" width="50" height="50"/>'
        }

        return html;
    }

    function htmlActionButtonWithImage(row) {
        var html;
        let urlPopup = '@Url.Content(Constants.UrlAction.Product.PopUpDialog)';
        let deleteImageUrl = '@Url.Content(Constants.UrlAction.Product.DeleteImageFolder)';
        let deleteUrl = baseApiUrl + 'Product/Delete/';

        if (row.image != null) {
            let imageUrl = '@Url.Content("~/images/product/")' + row.productId + "/" + row.image;
                html = '<a class="btn btn-info" onclick=openPopupLg("' + row.productId + '","View","' + urlPopup + '","ดูรายละเอียดสินค้า");>'
                + '<i class="fas fa-eye"></i></a> | '
                + '<a class="btn btn-warning" onclick=openPopupLg("' + row.productId + '","Update","' + urlPopup + '","แก้ไขสินค้า");>'
                + '<i class="fas fa-pen"></i></a> | '
                + '<a class="btn btn-danger" onclick=confirmDeleteWithImage("' + row.productId + '","' + deleteUrl + '","' + imageUrl + '","' + deleteImageUrl + '");>'
                + '<i class="fas fa-trash"></a>'
        }
        else {
            let imageUrl = '@Url.Content("~/images/no_photo.jpg")';
                html = '<a class="btn btn-info" onclick=openPopupLg("' + row.productId + '","View","' + urlPopup + '","ดูรายละเอียดสินค้า");>'
                + '<i class="fas fa-eye"></i></a> | '
                + '<a class="btn btn-warning" onclick=openPopupLg("' + row.productId + '","Update","' + urlPopup + '","แก้ไขสินค้า");>'
                + '<i class="fas fa-pen"></i></a> | '
                + '<a class="btn btn-danger" onclick=confirmDeleteWithImage("' + row.productId + '","' + deleteUrl + '","' + imageUrl + '","' + deleteImageUrl + '");>'
                + '<i class="fas fa-trash"></a>'
        }
        return html;
    }

    function setSelect2() {
        $("#txtProduct").select2({
            placeholder: "--- กรุณาเลือก ---",
            minimumInputLength: 1,
            dropdownAutoWidth: 'true',
            width: '100%',
            allowClear: true,
            ajax: {
                type: "GET",
                url: baseApiUrl + 'Select2/GetProduct',
                headers: { 'Authorization': 'bearer ' + _token },
                delay: 50,
                dataType: 'json',
                quietMillis: 1000,
                data: function (params) {
                    return { request: params.term };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data.value, function (obj) {
                            return {
                                id: obj.productId,
                                text: obj.productName
                            };
                        })
                    };
                }
            }
        });

        $("#txtCategory").select2({
            placeholder: "--- กรุณาเลือก ---",
            minimumInputLength: 1,
            dropdownAutoWidth: 'true',
            width: '100%',
            allowClear: true,
            ajax: {
                type: "GET",
                url: baseApiUrl + 'Select2/GetCategory',
                headers: { 'Authorization': 'bearer ' + _token },
                delay: 50,
                dataType: 'json',
                quietMillis: 1000,
                data: function (params) {
                    return { request: params.term };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data.value, function (obj) {
                            return {
                                id: obj.categoryId,
                                text: obj.categoryName
                            };
                        })
                    };
                }
            }
        });
    }

    function resetform() {
        $("#dtResult").dataTable().fnClearTable();
        $("#txtProduct").empty().trigger('change')
        $("#txtCategory").empty().trigger('change')
        $("#txtStatus").val('');
    }
</script>
