@using Ecommerce.Web.Commons;
<script>
    let urlDelete = '@Url.Content(Constants.UrlAction.Product.Delete)';

    $(function () {
        getList();
        $(document).on('click', '[data-toggle="lightbox"]', function (event) {
            event.preventDefault();
            $(this).ekkoLightbox({
                alwaysShowClose: true
            });
        });

        $('.btn[data-filter]').on('click', function () {
            $('.btn[data-filter]').removeClass('active');
            $(this).addClass('active');
        });
    });

    function getList() {
        $.ajax({
            type: "POST",
            url: '@Url.Content(Constants.UrlAction.Product.GetList)',
            dataType: "json",
            data: {},
            success: onSuccess
        })
    }

    function onSuccess(response) {
        $('#dtResult').DataTable({
            bDestroy: true,
            bProcessing: true,
            bLenghtChange: true,
            lengthMenu: [[5, 10, 25, -1], [5, 10, 25, "All"]],
            searching: false, //ช่อง search
            responsive: true,
            autoWidth: false,
            bfilter: true,
            bSort: true,
            bPaginate: true,
            lengthChange: true, //ปุ่มจำนวนแสดงข้อมูล
            //buttons: ["copy", "csv", "excel", "pdf", "print", "colvis"], //แผงปุ่ม export
            data: response.value,
            columns: [
                {
                    data: 'productName',
                    render: function (data, type, row, meta) {
                        return row.productName
                    }
                },
                {
                    data: 'categoryName',
                    render: function (data, type, row, meta) {
                        return row.categoryName
                    }
                },
                {
                    data: 'image',
                    render: function (data, type, row, meta) {
                        if (row.image != null) {
                            var imageUrl = '@Url.Content("~/images/product/")'+ row.productId + "/" + row.image;
                            return '<div class="filtr-item col-sm-2">'
                                + '<a href="' + imageUrl + '" data-toggle="lightbox" data-title="' + row.productName + '">'
                                + '<img src="'+imageUrl+'" alt="' + row.productName + '" width="50" height="50" />'
                                + '</a>'
                                + '</div>'
                        }
                        else 
                            return '<img src="@Url.Content("~/images/no_photo.jpg")" width="50" height="50"/>'
                    }
                },
                {
                    data: 'stock',
                    render: function (data, type, row, meta) {
                        return row.stock
                    }
                },
                {
                    data: 'price',
                    render: function (data, type, row, meta) {
                        return row.price
                    }
                },
                {
                    data: 'description',
                    render: function (data, type, row, meta) {
                        return row.description
                    }
                },
                {
                    data: 'status',
                    render: function (data, type, row, meta) {
                        if (row.status === 'A') {
                            return '<span class="badge bg-success">'
                                + '' + 'ใช้งาน' + ''
                                + '</span>'
                        }
                        else if (row.status === 'I') {
                            return '<span class="badge bg-dark">'
                                + '' + 'ไม่ได้ใช้งาน' + ''
                                + '</span> '
                        }
                        else {
                            return "";
                        }
                    }
                },
                {
                    data: 'createDate',
                    render: function (data, type, row, meta) {
                        return row.createDate
                    }
                },
                {
                    data: 'productId',
                    render: function (data, type, row, meta) {
                        return '<a class="btn btn-info" onclick=openPopup("' + row.productId + '","View");>'
                            + '<i class="fas fa-eye"></i></a> | '
                            + '<a class="btn btn-warning" onclick=openPopup("' + row.productId + '","Update");>'
                            + '<i class="fas fa-pen"></i></a> | '
                            + '<a class="btn btn-danger" onclick=confirmDelete("' + row.productId + '","' + row.productName + '","' + urlDelete + '");>'
                            + '<i class="fas fa-trash"></a>'
                    }
                }
            ]
        }).buttons().container().appendTo('#dtResult_wrapper .col-md-6:eq(0)');
    }

    function openPopup(id, action) {
        let data = { "id": id, "action": action };
        let url = '@Url.Content(Constants.UrlAction.Product.PopUpDialog)';
        action = action == "Add" ? "เพิ่มสินค้า" : "แก้ไขสินค้า";
        modalPOST(action, url, data, 50);
    };
</script>
