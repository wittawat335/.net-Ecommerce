@using Ecommerce.Web.Commons;
@using Ecommerce.Web.Models.User;
@model User;
<script>
    let urlDelete = '@Url.Content(Constants.UrlAction.User.Delete)';
    let url = '@Url.Content(Constants.UrlAction.User.PopUpDialog)';

    $(function () {
        setSelect2();
        getList();
        $('.btn[data-filter]').on('click', function () {
            $('.btn[data-filter]').removeClass('active');
            $(this).addClass('active');
        });
    });

    function getList() {
        $.ajax({
            type: "POST",
            url: '@Url.Content(Constants.UrlAction.User.GetList)',
            dataType: "json",
            data: {
                UserId: $('#@Html.IdFor(m => m.Username)').val(),
                PositionId: $('#@Html.IdFor(m => m.PositionId)').val(),
                Status: $('#@Html.IdFor(m => m.Status)').val(),
            },
            success: function (response) {
                if (response.isSuccess) onSuccess(response);
                else window.location.href = response.returnUrl;
            },
            error: function (textStatus, errorThrown) {
                Success = false;
            }
        })
    }

    function onSuccess(response) {
        $('#dtResult').DataTable({
            bDestroy: true,
            bProcessing: true,
            bLenghtChange: true,
            lengthMenu: [[5, 10, 25, -1], [5, 10, 25, "All"]],
            searching: false, //ช่อง search
            responsive: true,
            autoWidth: false,
            bfilter: true,
            bSort: true,
            bPaginate: true,
            lengthChange: true, //ปุ่มจำนวนแสดงข้อมูล
            //buttons: ["copy", "csv", "excel", "pdf", "print", "colvis"], //แผงปุ่ม export
            data: response.value,
            columns: [
                {
                    data: 'username',
                    render: function (data, type, row, meta) {
                        return row.username
                    }
                },
                {
                    data: 'fullName',
                    render: function (data, type, row, meta) {
                        return row.fullName
                    }
                },
                {
                    data: 'email',
                    render: function (data, type, row, meta) {
                        return row.email
                    }
                },
                {
                    data: 'positionName',
                    render: function (data, type, row, meta) {
                        return row.positionName
                    }
                },
                {
                    data: 'address',
                    render: function (data, type, row, meta) {
                        return row.address
                    }
                },
                {
                    data: 'status',
                    render: function (data, type, row, meta) {
                        if (row.status === 'A') {
                            return '<span class="badge bg-success">'
                                + '' + 'ใช้งาน' + ''
                                + '</span>'
                        }
                        else if (row.status === 'I') {
                            return '<span class="badge bg-dark">'
                                + '' + 'ไม่ได้ใช้งาน' + ''
                                + '</span> '
                        }
                        else {
                            return "";
                        }
                    }
                },
                {
                    data: 'createDate',
                    render: function (data, type, row, meta) {
                        return row.createDate
                    }
                },
                {
                    data: 'userId',
                    render: function (data, type, row, meta) {
                        return '<a class="btn btn-info" onclick=openPopup("' + row.userId + '","View","' + url + '","ดูข้อมูลผู้ใช้งาน");>'
                            + '<i class="fas fa-eye"></i></a> | '
                            + '<a class="btn btn-warning" onclick=openPopup("' + row.userId + '","Update","' + url + '","แก้ไขข้อมูลผู้ใช้งาน");>'
                            + '<i class="fas fa-pen"></i></a> | '
                            + '<a class="btn btn-danger" onclick=confirmDelete("' + row.userId + '","' + urlDelete + '","' + row.username + '");>'
                            + '<i class="fas fa-trash"></a>'
                    }
                }
            ]
        })
    }
    function setSelect2() {
        $("#@Html.IdFor(m => m.Username)").select2({
            placeholder: "--- กรุณาเลือก ---",
            minimumInputLength: 3,
            dropdownAutoWidth: 'true',
            width: '100%',
            allowClear: true,
            ajax: {
                url: '@Url.Content(Constants.UrlAction.User.select2userName)',
                delay: 50,
                dataType: 'json',
                quietMillis: 1000,
                data: function (params) {
                    return { query: params.term };
                },
                processResults: function (data) {
                    console.log(data);
                    return {
                        results: $.map(data, function (obj) {
                            return {
                                id: obj.userId,
                                text: obj.username + ' : ' + obj.fullName
                            };
                        })
                    };
                }
            }
        });

        $("#@Html.IdFor(m => m.PositionId)").select2({
            placeholder: "--- กรุณาเลือก ---",
            minimumInputLength: 3,
            dropdownAutoWidth: 'true',
            width: '100%',
            allowClear: true,
            ajax: {
                url: '@Url.Content(Constants.UrlAction.User.select2positionName)',
                delay: 50,
                dataType: 'json',
                quietMillis: 1000,
                data: function (params) {
                    return { query: params.term };
                },
                processResults: function (data) {
                    console.log(data);
                    return {
                        results: $.map(data, function (obj) {
                            return {
                                id: obj.positionId,
                                text: obj.positionName
                            };
                        })
                    };
                }
            }
        });
    }

    function resetform() {
        $("#dtResult").dataTable().fnClearTable();
        $("#@Html.IdFor(m => m.Username)").empty().trigger('change')
        $("#@Html.IdFor(m => m.PositionId)").empty().trigger('change')
        $("#@Html.IdFor(m => m.Status)").val('');
    }
</script>

